# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="@TZ7xgW9aki3t/up0:MAuNoWuKstUeQO^c/UF<RI=@RadQeLeTlBYpOSG<JqxBo0"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

## MongoDB configuration
# ~~~~~
mongo.user.host=localhost
mongo.user.port=27017
mongo.user.database=user
# Running in trusted environment, no authentication necessary
# mongo.user.username=
# mongo.user.password=

mongo.access.host=localhost
mongo.access.port=27017
mongo.access.database=access
# Running in trusted environment, no authentication necessary
# mongo.access.username=
# mongo.access.password=

mongo.record.host=localhost
mongo.record.port=27017
mongo.record.database=record
# Running in trusted environment, no authentication necessary
# mongo.record.username=
# mongo.record.password=

mongo.mapping.host=localhost
mongo.mapping.port=27017
mongo.mapping.database=mapping
# Running in trusted environment, no authentication necessary
# mongo.user.username=
# mongo.user.password=



## Server configuration
# ~~~~~
portal.server="DOMAIN"
platform.server="DOMAIN:9000"
apps.server="DOMAIN:3000"
visualizations.server="DOMAIN:4000"
visualizations.path="ROOTDIR/visualizations"
node.server="DOMAIN:5000"
node.path="/usr/bin/node"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Maximum size for POST payloads
# ~~~~~
parsers.text.maxLength=1024K

# Mailer
smtp.host=asmtp.mail.hostpoint.ch
smtp.port=25
smtp.ssl=false
smtp.tls=true
smtp.user="support@midata.coop"
smtp.password="7pAVn5Kz"
smtp.debug=false
smtp.from="support@midata.coop"
# smtp.mock=false

demoserver=true
