# This is the main configuration file for the application.
# ~~~~~


## Server configuration
# ~~~~~
portal.originUrl="PORTAL_ORIGIN"
portal.server="DOMAIN"
platform.server="DOMAIN"
apps.server="DOMAIN"
visualizations.server="PLUGINS_SERVER"
visualizations.path="ROOTDIR/visualizations"
node.server="DOMAIN:5000"
node.path="/usr/bin/node"

errorreports.targetemail="security@midata.coop"
errorreports.targetname="Security Officer"

instanceType=INSTANCETYPE
default.language=DEFAULT_LANGUAGE

versions.midata-terms-of-use=1.1
versions.midata-privacy-policy=1.1
versions.midata-terms-of-use-hp=1.0
versions.midata-privacy-policy-hp=1.0

sms.provider="SMS_PROVIDER"
sms.token="SMS_OAUTH_TOKEN"
sms.from=Midata

# Maximum size for POST payloads
# ~~~~~
play.http.parser.maxMemoryBuffer=10MB
play.http.parser.maxDiskBuffer=100MB

play.filters.enabled=[]

play.mailer {
  host=MAIL_SMTP_SERVER
  port=25
  ssl=false
  tls=true
  user="MAIL_SENDER"
  password="MAIL_PASSWORD"
  debug=false  
}
smtp.from="MAIL_SENDER"
emails.admin="MAIL_ADMIN"

my-thread-pool-dispatcher {

	   # Dispatcher is the name of the event-based dispatcher
	   type = Dispatcher
	
	   # What kind of ExecutionService to use
	   executor = "thread-pool-executor"
	
	   # Configuration for the thread pool
	  thread-pool-executor {
		# minimum number of threads to cap factor-based core number to
		core-pool-size-min = 2
		# No of core threads ... ceil(available processors * factor)
		core-pool-size-factor = 2.0
		# maximum number of threads to cap factor-based number to
		core-pool-size-max = 10
	  }
	
	  # Throughput defines the maximum number of messages to be
	  # processed per actor before the thread jumps to the next actor.
	  # Set to 1 for as fair as possible.
	  throughput = 1
}

play {
   
  akka {
    event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    loglevel = WARNING
    actor {
                
      default-dispatcher = {
        fork-join-executor {
          parallelism-min = 300
          parallelism-max = 300
        }
      }
    }
  }
    
}

midata {
    akka {
	    loglevel = WARNING
	    actor {      
	      provider = "cluster"         
	    }
	    
	    remote {
	      log-remote-lifecycle-events = on
          netty.tcp {
             hostname = "PLATFORM_HOSTNAME"
             port = 9006
          }
	    	      	      
	      log-sent-messages = on
	      log-received-messages = on
	    }
	    
	    cluster {
          seed-nodes = [
            CLUSTER_SERVER
          ]
           
        }
    }
 }


