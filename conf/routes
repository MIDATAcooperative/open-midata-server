# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET     /welcome                    controllers.Application.welcome()
POST    /welcome                    controllers.Application.authenticate()
POST    /welcome/registration       controllers.Application.register()
GET     /logout                     controllers.Application.logout()
# Spaces
GET     /spaces                     controllers.Application.spaces()
GET     /spaces/:id                 controllers.Spaces.show(id: String)
POST    /spaces                     controllers.Spaces.add()
DELETE  /spaces/:id                 controllers.Spaces.delete(id: String)
PUT     /spaces/:id                 controllers.Spaces.rename(id: String)
POST    /spaces/record/:id          controllers.Spaces.addRecords(id: String)
DELETE  /spaces/record/:id          controllers.Spaces.removeRecord(id: String)
POST    /spaces/updateSpaces        controllers.Spaces.updateSpaces(id: String, spaceIds: java.util.List[String])
POST    /spaces/updateCircles       controllers.Spaces.updateCircles(id: String, spaceIds: java.util.List[String])
POST    /spaces/record              controllers.Spaces.manuallyAddRecord()
GET     /search/records/:id/:search controllers.Spaces.searchRecords(id: String, search: String)
GET     /search/records/:id/        controllers.Spaces.searchRecords(id: String, search: String = "")
GET     /spaces/findSpaces/:id      controllers.Spaces.findSpacesWith(id: String)
GET     /spaces/findCircles/:id     controllers.Spaces.findCirclesWith(id: String)
# Circles
GET     /circles                    controllers.Application.circles()
GET     /circles/:id                controllers.Circles.show(id: String)
POST    /circles                    controllers.Circles.add()
DELETE  /circles/:id                controllers.Circles.delete(id: String)
PUT     /circles/:id                controllers.Circles.rename(id: String)
POST    /circles/user/:id           controllers.Circles.addUsers(id: String)
DELETE  /circles/user/:id           controllers.Circles.removeMember(id: String)
GET     /search/user/:id/:search    controllers.Circles.searchUsers(id: String, search: String)
GET     /search/user/:id/           controllers.Circles.searchUsers(id: String, search: String = "")
# Share
GET     /share                      controllers.Application.share()
POST    /share                      controllers.Share.share()
GET     /share/records              controllers.Share.sharedRecords(circleIds: java.util.List[String])
# Default visualization
GET     /loadAllRecords             controllers.Spaces.loadAllRecords()
GET     /loadRecords                controllers.Spaces.loadRecords(spaceId: String)
GET     /visualization/loading      controllers.Visualizations.loading()
POST    /visualization/list         controllers.Visualizations.list()
# JS Routes
GET     /assets/javascripts/routes  controllers.Application.javascriptRoutes()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
