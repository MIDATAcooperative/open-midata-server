# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET     /welcome                    controllers.Application.welcome()
POST    /welcome                    controllers.Application.authenticate()
POST    /welcome/registration       controllers.Application.register()
GET     /logout                     controllers.Application.logout()
# Spaces
GET     /spaces                     controllers.Spaces.index()
POST    /spaces                     controllers.Spaces.add()
GET     /spaces/:id                 controllers.Spaces.show(id: String)
PUT     /spaces/:id                 controllers.Spaces.rename(id: String)
DELETE  /spaces/:id                 controllers.Spaces.delete(id: String)
POST    /spaces/records/:id/add     controllers.Spaces.addRecords(id: String)
GET     /spaces/records/search      controllers.Spaces.searchRecords(id: String, query: String)
GET     /spaces/records/loadall     controllers.Spaces.loadAllRecords()
GET     /spaces/records/load        controllers.Spaces.loadRecords(spaceId: String)
GET     /spaces/:id/visualization/url controllers.Spaces.getVisualizationURL(id: String)
# Circles
GET     /circles                    controllers.Circles.index()
POST    /circles                    controllers.Circles.add()
GET     /circles/:id                controllers.Circles.show(id: String)
PUT     /circles/:id                controllers.Circles.rename(id: String)
DELETE  /circles/:id                controllers.Circles.delete(id: String)
POST    /circles/users/:id/add      controllers.Circles.addUsers(id: String)
DELETE  /circles/:id/members/:memberId controllers.Circles.removeMember(id: String, memberId: String)
GET     /circles/users/search       controllers.Circles.searchUsers(id: String, query: String)
# Market
GET     /market                     controllers.Market.index()
GET     /market/apps/register       controllers.Market.registerAppForm()
POST    /market/apps/register       controllers.Market.registerApp()
GET     /market/apps/:id            controllers.Market.showApp(id: String)
PUT     /market/apps/:id            controllers.Market.installApp(id: String)
DELETE  /market/apps/:id            controllers.Market.uninstallApp(id: String)
GET     /market/visualizations/register controllers.Market.registerVisualizationForm()
POST    /market/visualizations/register controllers.Market.registerVisualization()
GET     /market/visualizations/:id  controllers.Market.showVisualization(id: String)
PUT     /market/visualizations/:id  controllers.Market.installVisualization(id: String)
DELETE  /market/visualizations/:id  controllers.Market.uninstallVisualization(id: String)
# Search
POST    /search                     controllers.GlobalSearch.submit()
GET     /search/:query              controllers.GlobalSearch.search(query: String)
GET     /search/complete/:query     controllers.GlobalSearch.complete(query: String)
GET     /search/:type/:id           controllers.GlobalSearch.show(type: String, id: String)
# Users
GET     /users/:id/name             controllers.Users.getName(id: String)
# Records
GET     /records/create/:appId      controllers.Records.create(appId: String)
# Default visualizations
GET     /visualizations/loading     controllers.visualizations.Visualizations.loading()
GET     /visualizations/:id         controllers.visualizations.Visualizations.show(id: String)
POST    /visualizations/recordlist  controllers.visualizations.RecordList.load()
GET     /visualizations/recordlist/spaces/findwith/:id controllers.visualizations.RecordList.findSpacesWith(id: String)
GET     /visualizations/recordlist/circles/findwith/:id controllers.visualizations.RecordList.findCirclesWith(id: String)
POST    /visualizations/recordlist/spaces/update controllers.visualizations.RecordList.updateSpaces(id: String, spaceIds: java.util.List[String])
POST    /visualizations/recordlist/circles/update controllers.visualizations.RecordList.updateSharing(id: String, started: java.util.List[String], stopped: java.util.List[String])
POST    /visualizations/runaggregator controllers.visualizations.RunAggregator.load()

# JS Routes
GET     /assets/javascripts/routes  controllers.Application.javascriptRoutes()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)


# Apps Public API
OPTIONS /apps/records/create        controllers.Apps.checkPreflight()
POST    /apps/records/create        controllers.Apps.createRecord()
GET     /apps/records/:recordId     controllers.Apps.getRecord(recordId: String)