# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /welcome                    controllers.Application.welcome()
POST    /welcome                    controllers.Application.authenticate()
POST    /registration               controllers.Application.register()
GET     /logout                     controllers.Application.logout()
# Messages
GET     /                           controllers.Messages.index()
GET     /messages/fetch             controllers.Messages.fetch()
POST    /messages/get               controllers.Messages.get()
GET     /messages/:id               controllers.Messages.details(id: String)
# Records
GET     /records                    controllers.Records.index()
GET     /records/fetch              controllers.Records.fetch()
POST    /records/get                controllers.Records.get()
GET     /records/:id                controllers.Records.details(id: String)
GET     /records/:id/url            controllers.Records.getDetailsUrl(id: String)
GET     /records/create/:appId      controllers.Records.create(appId: String)
POST    /records/:id/spaces         controllers.Records.updateSpaces(id: String)
POST    /records/:id/circles        controllers.Records.updateSharing(id: String)
# Spaces
GET     /spaces                     controllers.Spaces.index()
POST    /spaces                     controllers.Spaces.add()
GET     /spaces/fetch               controllers.Spaces.fetch()
GET     /spaces/:id                 controllers.Spaces.details(id: String)
DELETE  /spaces/:id                 controllers.Spaces.delete(id: String)
POST    /spaces/:id/records         controllers.Spaces.addRecords(id: String)
GET     /search/records/:query      controllers.Spaces.searchRecords(query: String)
# Circles
GET     /circles                    controllers.Circles.index()
POST    /circles                    controllers.Circles.add()
GET     /circles/fetch              controllers.Circles.fetch()
GET     /circles/contacts           controllers.Circles.loadContacts()
GET     /circles/:id                controllers.Circles.details(id: String)
DELETE  /circles/:id                controllers.Circles.delete(id: String)
POST    /circles/:id/users          controllers.Circles.addUsers(id: String)
DELETE  /circles/:id/users/:userId  controllers.Circles.removeMember(id: String, userId: String)
GET     /search/users/:query        controllers.Circles.searchUsers(query: String)
# Market
GET     /market                     controllers.Market.index()
GET     /market/register/apps       controllers.Market.registerAppForm()
POST    /market/register/apps       controllers.Market.registerApp()
GET     /market/register/visualizations controllers.Market.registerVisualizationForm()
POST    /market/register/visualizations controllers.Market.registerVisualization()
# Search
GET     /search/:query              controllers.GlobalSearch.index(query: String)
GET     /search/run/:query          controllers.GlobalSearch.search(query: String)
GET     /search/complete/:query     controllers.GlobalSearch.complete(query: String)
# Users
POST    /users/get                  controllers.Users.get()
GET     /users/:id                  controllers.Users.details(id: String)
# Apps
GET     /apps/fetch                 controllers.Apps.fetch()
POST    /apps/get                   controllers.Apps.get()
GET     /apps/spotlighted           controllers.Apps.getSpotlighted()
GET     /apps/:id                   controllers.Apps.details(id: String)
PUT     /apps/:id                   controllers.Apps.install(id: String)
DELETE  /apps/:id                   controllers.Apps.uninstall(id: String)
GET     /apps/:id/installed         controllers.Apps.isInstalled(id: String)
# Visualizations
GET     /visualizations/fetch       controllers.Visualizations.fetch()
POST    /visualizations/get         controllers.Visualizations.get()
GET     /visualizations/spotlighted controllers.Visualizations.getSpotlighted()
GET     /visualizations/:id         controllers.Visualizations.details(id: String)
PUT     /visualizations/:id         controllers.Visualizations.install(id: String)
DELETE  /visualizations/:id         controllers.Visualizations.uninstall(id: String)
GET     /visualizations/:id/installed controllers.Visualizations.isInstalled(id: String)
GET     /visualizations/:id/url     controllers.Visualizations.getUrl(id: String)

# JS Routes
GET     /assets/javascripts/routes  controllers.Application.javascriptRoutes()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)


# Apps Public API
OPTIONS /:userId/apps/:appId/records controllers.AppsAPI.checkPreflight(userId: String, appId: String)
POST    /:userId/apps/:appId/records controllers.AppsAPI.createRecord(userId: String, appId: String)
