# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET     /welcome                    controllers.Application.welcome()
POST    /welcome                    controllers.Application.authenticate()
POST    /welcome/registration       controllers.Application.register()
GET     /logout                     controllers.Application.logout()
# Records
GET     /fetch/records              controllers.Records.fetch()
POST    /get/records                controllers.Records.get()
GET     /records                    controllers.Records.index()
GET     /records/create/:appId      controllers.Records.create(appId: String)
POST    /records/:id/spaces         controllers.Records.updateSpaces(id: String)
POST    /records/:id/circles        controllers.Records.updateSharing(id: String)
# Spaces
GET     /fetch/spaces               controllers.Spaces.fetch()
GET     /spaces                     controllers.Spaces.index()
POST    /spaces                     controllers.Spaces.add()
DELETE  /spaces/:id                 controllers.Spaces.delete(id: String)
POST    /spaces/:id/records         controllers.Spaces.addRecords(id: String)
GET     /search/records/:query      controllers.Spaces.searchRecords(query: String)
# Circles
GET     /fetch/circles              controllers.Circles.fetch()
GET     /circles                    controllers.Circles.index()
POST    /circles                    controllers.Circles.add()
DELETE  /circles/:id                controllers.Circles.delete(id: String)
POST    /circles/:id/users          controllers.Circles.addUsers(id: String)
DELETE  /circles/:id/users/:userId  controllers.Circles.removeMember(id: String, userId: String)
GET     /circles/contacts           controllers.Circles.loadContacts()
GET     /search/users/:query        controllers.Circles.searchUsers(query: String)
# Market
GET     /market                     controllers.Market.index()
GET     /market/apps/register       controllers.Market.registerAppForm()
POST    /market/apps/register       controllers.Market.registerApp()
GET     /market/apps/:id            controllers.Market.showApp(id: String)
PUT     /market/apps/:id            controllers.Market.installApp(id: String)
DELETE  /market/apps/:id            controllers.Market.uninstallApp(id: String)
GET     /market/visualizations/register controllers.Market.registerVisualizationForm()
POST    /market/visualizations/register controllers.Market.registerVisualization()
GET     /market/visualizations/:id  controllers.Market.showVisualization(id: String)
PUT     /market/visualizations/:id  controllers.Market.installVisualization(id: String)
DELETE  /market/visualizations/:id  controllers.Market.uninstallVisualization(id: String)
# Search
POST    /search                     controllers.GlobalSearch.submit()
GET     /search/:query              controllers.GlobalSearch.search(query: String)
GET     /search/complete/:query     controllers.GlobalSearch.complete(query: String)
GET     /search/:type/:id           controllers.GlobalSearch.show(type: String, id: String)
# Users
GET     /users/:id/name             controllers.Users.getName(id: String)
# Apps
GET     /fetch/apps                 controllers.Apps.fetch()
# Visualizations
GET     /fetch/visualizations       controllers.Visualizations.fetch()
GET     /visualizations/:id/url     controllers.Visualizations.getUrl(id: String)

# JS Routes
GET     /assets/javascripts/routes  controllers.Application.javascriptRoutes()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)


# Apps Public API
OPTIONS /apps/:appId/records/create/:userId controllers.AppsAPI.checkPreflight(appId: String, userId: String)
POST    /apps/:appId/records/create/:userId controllers.AppsAPI.createRecord(appId: String, userId: String)
